@*@using Management
@using Management.Inputs
@using Management.Outputs
@using MudBlazor

@inject IDialogService Dialog

<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="Employee.FirstName" Label="First Name" />
        <MudTextField @bind-Value="Employee.LastName" Label="Last Name" />
        <MudTextField @bind-Value="Employee.Dui" Label="DUI" />

      
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    // El empleado que se edita se pasa como parámetro
    [Parameter] public EmployeeOutput Employee { get; set; }
    [Parameter] public EventCallback<EmployeeOutput> OnSave { get; set; }  // Para invocar la lógica de guardar

    // Acción para guardar los cambios
    private async Task Save()
    {
        if (OnSave.HasDelegate)
        {
            await OnSave.InvokeAsync(Employee);  // Llamar al callback para guardar
        }

        MudDialog.Close(DialogResult.Ok(Employee));  // Cierra el modal
    }

    // Acción para cancelar
    private void Cancel() => MudDialog.Cancel();
}
*@